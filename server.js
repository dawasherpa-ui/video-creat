const a0_0x2f2f82 = a0_0x1fef; (function (_0x1dae30, _0x38e034) { const _0x10b871 = a0_0x1fef, _0x1a7e1d = _0x1dae30(); while (!![]) { try { const _0x56fbbe = -parseInt(_0x10b871(0x167)) / 0x1 + -parseInt(_0x10b871(0x19c)) / 0x2 * (-parseInt(_0x10b871(0x181)) / 0x3) + -parseInt(_0x10b871(0x187)) / 0x4 * (parseInt(_0x10b871(0x175)) / 0x5) + -parseInt(_0x10b871(0x189)) / 0x6 * (parseInt(_0x10b871(0x19d)) / 0x7) + -parseInt(_0x10b871(0x195)) / 0x8 + -parseInt(_0x10b871(0x1bb)) / 0x9 * (parseInt(_0x10b871(0x1f6)) / 0xa) + parseInt(_0x10b871(0x1b0)) / 0xb; if (_0x56fbbe === _0x38e034) break; else _0x1a7e1d['push'](_0x1a7e1d['shift']()); } catch (_0x1b7f26) { _0x1a7e1d['push'](_0x1a7e1d['shift']()); } } }(a0_0x7ce5, 0x3b47e)); const express = require('express'), app = express(), PORT = process['env'][a0_0x2f2f82(0x1cb)] || 0xbb8, { createCanvas, loadImage } = require(a0_0x2f2f82(0x190)), { GoogleGenerativeAI } = require(a0_0x2f2f82(0x1f3)); require(a0_0x2f2f82(0x1cf))[a0_0x2f2f82(0x1cd)](); const fetch = (..._0x3e837b) => import('node-fetch')[a0_0x2f2f82(0x1e0)](({ default: _0xaccb63 }) => _0xaccb63(..._0x3e837b)), { spawn } = require('child_process'), path = require('path'), fs = require('fs'), os = require('os'), ffmpegInstaller = require(a0_0x2f2f82(0x1d6)), axios = require(a0_0x2f2f82(0x1fe)), { createClient } = require(a0_0x2f2f82(0x1f5)), supabaseUrl = process[a0_0x2f2f82(0x1ed)][a0_0x2f2f82(0x1ee)], supabaseKey = process['env'][a0_0x2f2f82(0x171)], supabase = createClient(supabaseUrl, supabaseKey), baseUrl = process['env']['BASE_URL'] || 'http://localhost:3000', ffmpegPath = ffmpegInstaller[a0_0x2f2f82(0x1bd)]; !process['env'][a0_0x2f2f82(0x202)] && console[a0_0x2f2f82(0x1dc)](a0_0x2f2f82(0x1b3)); function a0_0x1fef(_0x4a4214, _0x4dd140) { const _0x7ce58 = a0_0x7ce5(); return a0_0x1fef = function (_0x1fefaf, _0x470c25) { _0x1fefaf = _0x1fefaf - 0x14d; let _0x5cf680 = _0x7ce58[_0x1fefaf]; return _0x5cf680; }, a0_0x1fef(_0x4a4214, _0x4dd140); } function a0_0x7ce5() { const _0x426943 = ['4:3', 'libx264', 'getContext', 'height', 'kill', 'No\x20image\x20data\x20found\x20in\x20response', 'end', '3:4', 'response', 'story', 'setHeader', 'videos', '/creator', '-c:v', '14237124UuolJO', 'headersSent', 'Failed\x20to\x20retrieve\x20upload\x20URL\x20from\x20createReel\x20response.', 'GEMINI_API_KEY\x20is\x20not\x20set.\x20Please\x20set\x20it\x20in\x20your\x20.env\x20file.', 'FACEBOOK_ACCESS_TOKEN', 'facebook', 'FACEBOOK_PAGE_ID', '-loop', 'createReadStream', 'video_', 'Error\x20creating\x20reel:', '9wJIhOf', 'upload', 'path', 'Content-Length', 'success', 'video_id', 'Error\x20generating\x20video', 'video-generator', 'stringify', '9:16', 'existsSync', 'Error\x20generating\x20video:', 'stillimage', 'join', 'floor', 'video', 'PORT', 'inlineData', 'config', 'find', 'dotenv', 'Text', 'Server\x20error\x20while\x20posting\x20to\x20social\x20media', 'video/content.mp4', '-b:a', 'aac', '96k', '@ffmpeg-installer/ffmpeg', 'A\x20text\x20is\x20required\x20to\x20generate\x20an\x20image.', 'writeFileSync', 'pipe', 'image', 'Error\x20generating\x20image', 'error', 'Error\x20in\x20post-social\x20route:', 'set', 'INSTAGRAM_ACCOUNT_ID', 'then', '&upload_phase=finish&video_state=PUBLISHED&description=', 'parts', 'No\x20video\x20URL\x20returned\x20from\x20video\x20generation', 'Error\x20handling\x20aspect\x20ratio\x20', 'width', 'gemini-2.0-flash-preview-image-generation', 'Error\x20cleaning\x20up\x20files:', '&video_id=', 'Caption\x20is\x20required', 'veryfast', 'Missing\x20required\x20environment\x20variables\x20for\x20social\x20media\x20posting', 'Failed\x20to\x20post\x20video\x20to\x20Facebook', 'env', 'SUPABASE_URL', 'application/json', 'message', '-pix_fmt', 'Could\x20not\x20generate\x20image.\x20Model\x20response:\x20', '@google/generative-ai', 'urlencoded', '@supabase/supabase-js', '1972930kUNgmk', 'true', 'json', 'Audio\x20URL\x20is\x20required\x20(audio\x20parameter)', 'Video\x20posted\x20to\x20Facebook\x20successfully\x20as\x20', 'body', '.mp4\x22', 'mkdirSync', 'axios', 'black', 'Hello\x20World!\x20Welcome\x20to\x20Express\x20server', 'https://graph.facebook.com/v21.0', 'GEMINI_API_KEY', 'instagram', 'use', '3600', 'max', '1:1', '.png', 'status', 'drawImage', 'storage', 'length', 'Missing\x20required\x20parameters:\x20text\x20and\x20audio\x20are\x20required', 'random', 'query', '/image?text=', '16:9', 'content', 'generateContent', '-c:a', 'Could\x20not\x20extract\x20image\x20from\x20model\x20response.', 'Video\x20URL\x20is\x20required', 'audio_', '-shortest', 'round', '-framerate', 'fillRect', '/post-social', 'close', 'GRAPH_URL', 'Error\x20publishing\x20reel:', '2:3', 'Upload\x20URL\x20is\x20undefined.', 'unlinkSync', 'type', '320286FtQurw', '-preset', 'static', 'video/mp4', 'get', 'post', 'data', '-movflags', '.mp3', 'base64', 'SUPABASE_KEY', '/me/video_reels?access_token=', '/simplegen?', '3:2', '290dNcZKE', 'send', 'public', 'Video\x20file\x20not\x20found\x20after\x20FFmpeg\x20process', 'Failed\x20to\x20generate\x20video:\x20', 'FFmpeg\x20process\x20error:', 'Failed\x20to\x20upload\x20video.', '/simplegen', 'upload_url', 'text', 'stderr', '&upload_phase=start', '9AecxMD', 'Create\x20a\x209:16\x20AspectRatio,\x20which\x20is\x20typical\x20for\x20vertical\x20phone\x20screens\x20or\x20stories,\x20image\x20with\x20a\x20jet-black\x20background.\x20Display\x20the\x20following\x20motivational\x20quote\x20in\x20pure\x20white,\x20using\x20small,\x20fine-print\x20typography.\x20Highlight\x20a\x20few\x20key\x20words\x20in\x20red.\x20The\x20text\x20layout\x20should\x20feature\x20auto-generated\x20dynamic\x20typography\x20—\x20with\x20randomized\x20font\x20styles,\x20small\x20fontsizes,\x20spacing,\x20and\x20composition\x20—\x20in\x20a\x20clean,\x20minimal\x20aesthetic.\x20Ensure\x20high\x20contrast\x20and\x208K\x20resolution.\x20-\x22', 'Server\x20is\x20running', 'toBuffer', 'Supabase\x20storage\x20is\x20not\x20configured.\x20Please\x20set\x20SUPABASE_URL\x20and\x20SUPABASE_KEY\x20in\x20your\x20.env\x20file.', 'includes', '23756tsqlMO', 'Unsupported\x20content\x20type', '426522zNmuQh', 'Failed\x20to\x20post\x20as\x20a\x20reel:', 'publicUrl', 'Content-Type', 'Error\x20uploading\x20to\x20Supabase:', 'Text\x20response\x20from\x20model:', 'candidates', 'canvas', 'fillStyle', '+faststart', 'split', 'min', '1053176YpVFyn', 'tmpdir', 'readFileSync', 'from', 'Error\x20handling\x20video\x20file:', 'OAuth\x20', '.mp4', '8870gLKGVP', '7bTKIVy', 'now', '/image', '-crf', 'reel']; a0_0x7ce5 = function () { return _0x426943; }; return a0_0x7ce5(); } const genAI = new GoogleGenerativeAI(process[a0_0x2f2f82(0x1ed)][a0_0x2f2f82(0x202)]), tempDir = path[a0_0x2f2f82(0x1c8)](os[a0_0x2f2f82(0x196)](), a0_0x2f2f82(0x1c2)); !fs[a0_0x2f2f82(0x1c5)](tempDir) && fs[a0_0x2f2f82(0x1fd)](tempDir, { 'recursive': !![] }); const videoDir = path[a0_0x2f2f82(0x1c8)](__dirname, 'public', a0_0x2f2f82(0x1ad)); !fs[a0_0x2f2f82(0x1c5)](videoDir) && fs[a0_0x2f2f82(0x1fd)](videoDir, { 'recursive': !![] }); app[a0_0x2f2f82(0x204)](express[a0_0x2f2f82(0x1f8)]()), app[a0_0x2f2f82(0x204)](express[a0_0x2f2f82(0x1f4)]({ 'extended': !![] })), app[a0_0x2f2f82(0x204)](express[a0_0x2f2f82(0x169)](a0_0x2f2f82(0x177))); const graphUrl = process[a0_0x2f2f82(0x1ed)][a0_0x2f2f82(0x161)] || a0_0x2f2f82(0x201), instagramAccountId = process['env'][a0_0x2f2f82(0x1df)], facebookPageId = process['env'][a0_0x2f2f82(0x1b6)], accessToken = process[a0_0x2f2f82(0x1ed)][a0_0x2f2f82(0x1b4)]; app[a0_0x2f2f82(0x16b)]('/', (_0x27f404, _0xab1430) => { const _0x1c2157 = a0_0x2f2f82; _0xab1430[_0x1c2157(0x176)](_0x1c2157(0x200)); }), app[a0_0x2f2f82(0x16b)]('/api/status', (_0x3274cd, _0x67947a) => { const _0x23b694 = a0_0x2f2f82; _0x67947a[_0x23b694(0x1f8)]({ 'status': _0x23b694(0x183), 'time': new Date() }); }), app[a0_0x2f2f82(0x16b)](a0_0x2f2f82(0x19f), async (_0x259c78, _0x51d488) => { const _0x326afd = a0_0x2f2f82; try { const { text: _0x59c5b5 } = _0x259c78['query']; if (!_0x59c5b5) return _0x51d488[_0x326afd(0x209)](0x190)[_0x326afd(0x176)](_0x326afd(0x1d7)); if (!process[_0x326afd(0x1ed)][_0x326afd(0x202)]) return _0x51d488[_0x326afd(0x209)](0x1f4)[_0x326afd(0x176)]('Server\x20is\x20missing\x20API\x20key\x20for\x20image\x20generation.'); const _0x2d3798 = genAI['getGenerativeModel']({ 'model': _0x326afd(0x1e6), 'generationConfig': { 'responseModalities': [_0x326afd(0x1d0), 'Image'], 'temperature': 0x1, 'topP': 0.95, 'topK': 0x28, 'maxOutputTokens': 0x2000 } }), _0x52e9b9 = _0x326afd(0x182) + _0x59c5b5 + '\x22', _0x26bde3 = await _0x2d3798[_0x326afd(0x156)](_0x52e9b9), _0x5c355d = await _0x26bde3[_0x326afd(0x1aa)], _0x31600f = _0x5c355d[_0x326afd(0x18f)][0x0][_0x326afd(0x155)][_0x326afd(0x1e2)], _0x535b6c = _0x31600f[_0x326afd(0x1ce)](_0x54f5f9 => _0x54f5f9[_0x326afd(0x1cc)]); if (_0x535b6c) { const { mimeType: _0x484952, data: _0x1c2bfb } = _0x535b6c[_0x326afd(0x1cc)], _0x2bb82d = Buffer[_0x326afd(0x198)](_0x1c2bfb, _0x326afd(0x170)); _0x51d488[_0x326afd(0x1de)](_0x326afd(0x18c), _0x484952), _0x51d488[_0x326afd(0x176)](_0x2bb82d); } else { console['error'](_0x326afd(0x1a7), JSON[_0x326afd(0x1c3)](_0x5c355d)); const _0x144bff = _0x31600f[_0x326afd(0x1ce)](_0x5d4866 => _0x5d4866[_0x326afd(0x17e)]); _0x144bff ? (console[_0x326afd(0x1dc)](_0x326afd(0x18e), _0x144bff[_0x326afd(0x17e)]), _0x51d488[_0x326afd(0x209)](0x1f4)[_0x326afd(0x176)](_0x326afd(0x1f2) + _0x144bff[_0x326afd(0x17e)])) : _0x51d488['status'](0x1f4)['send'](_0x326afd(0x158)); } } catch (_0x1848cf) { console[_0x326afd(0x1dc)]('Error\x20generating\x20image:', _0x1848cf), _0x51d488['status'](0x1f4)[_0x326afd(0x176)](_0x326afd(0x1db)); } }), app[a0_0x2f2f82(0x16b)](a0_0x2f2f82(0x17c), async (_0x125f8c, _0x4269ba) => { const _0x1ef154 = a0_0x2f2f82; try { const { image: _0x3067a3, audio: _0x334b5f, duration: duration = 0xa, aspectratio: aspectratio = _0x1ef154(0x1c4), storeVideo: storeVideo = _0x1ef154(0x1f7) } = _0x125f8c[_0x1ef154(0x152)]; if (!_0x3067a3) return _0x4269ba['status'](0x190)['send']('Image\x20URL\x20is\x20required\x20(image\x20parameter)'); if (!_0x334b5f) return _0x4269ba[_0x1ef154(0x209)](0x190)[_0x1ef154(0x176)](_0x1ef154(0x1f9)); if (storeVideo === 'true' && (!supabaseUrl || !supabaseKey)) return _0x4269ba[_0x1ef154(0x209)](0x1f4)[_0x1ef154(0x176)](_0x1ef154(0x185)); const _0xe7947c = parseInt(duration); let _0x12b410 = 0x780, _0x1d6928 = 0x438; try { switch (aspectratio) { case _0x1ef154(0x154): _0x12b410 = 0x780, _0x1d6928 = 0x438; break; case _0x1ef154(0x1a2): _0x12b410 = 0x5a0, _0x1d6928 = 0x438; break; case '21:9': _0x12b410 = 0xa00, _0x1d6928 = 0x438; break; case _0x1ef154(0x174): _0x12b410 = 0x654, _0x1d6928 = 0x438; break; case _0x1ef154(0x207): _0x12b410 = 0x438, _0x1d6928 = 0x438; break; case '9:16': _0x12b410 = 0x438, _0x1d6928 = 0x780; break; case _0x1ef154(0x163): _0x12b410 = 0x438, _0x1d6928 = 0x654; break; case _0x1ef154(0x1a9): _0x12b410 = 0x438, _0x1d6928 = 0x5a0; break; case _0x1ef154(0x203): case 'ig': _0x12b410 = 0x438, _0x1d6928 = 0x438; break; case _0x1ef154(0x1ab): _0x12b410 = 0x438, _0x1d6928 = 0x780; break; case 'youtube': case 'yt': _0x12b410 = 0x780, _0x1d6928 = 0x438; break; case 'facebook': case 'fb': _0x12b410 = 0x500, _0x1d6928 = 0x2d0; break; case 'twitter': _0x12b410 = 0x500, _0x1d6928 = 0x2d0; break; default: const _0x227c3c = aspectratio[_0x1ef154(0x193)](':'); if (_0x227c3c['length'] === 0x2) { const _0x27c1ab = parseInt(_0x227c3c[0x0]), _0xed62ee = parseInt(_0x227c3c[0x1]); if (!isNaN(_0x27c1ab) && !isNaN(_0xed62ee) && _0x27c1ab > 0x0 && _0xed62ee > 0x0) { const _0x385ee5 = _0x27c1ab / _0xed62ee; _0x385ee5 >= 0x1 ? (_0x12b410 = 0x780, _0x1d6928 = Math[_0x1ef154(0x15c)](_0x12b410 / _0x385ee5)) : (_0x1d6928 = 0x780, _0x12b410 = Math[_0x1ef154(0x15c)](_0x1d6928 * _0x385ee5)), _0x12b410 = _0x12b410 % 0x2 === 0x0 ? _0x12b410 : _0x12b410 + 0x1, _0x1d6928 = _0x1d6928 % 0x2 === 0x0 ? _0x1d6928 : _0x1d6928 + 0x1; } } } } catch (_0x49e463) { console[_0x1ef154(0x1dc)](_0x1ef154(0x1e4) + aspectratio + ':', _0x49e463), _0x12b410 = 0x780, _0x1d6928 = 0x438; } const _0x271956 = Date[_0x1ef154(0x19e)](), _0x209329 = _0x271956 + '_' + Math[_0x1ef154(0x1c9)](Math[_0x1ef154(0x151)]() * 0x3e8), _0x1c1588 = 'img_' + _0x209329 + _0x1ef154(0x208), _0x16cff9 = _0x1ef154(0x15a) + _0x209329 + _0x1ef154(0x16f), _0x369ca4 = _0x1ef154(0x1b9) + _0x209329 + _0x1ef154(0x19b), _0x19e825 = path['join'](tempDir, _0x1c1588), _0x1c2c1e = path[_0x1ef154(0x1c8)](tempDir, _0x16cff9), _0x212fbf = path[_0x1ef154(0x1c8)](tempDir, _0x369ca4), _0x71bace = await fetch(_0x3067a3), _0x9deeb4 = await _0x71bace['arrayBuffer'](), _0x205250 = await loadImage(Buffer[_0x1ef154(0x198)](_0x9deeb4)), _0x1abab3 = createCanvas(_0x12b410, _0x1d6928), _0xc3fb01 = _0x1abab3[_0x1ef154(0x1a4)]('2d'); if (aspectratio === _0x1ef154(0x1c4) || aspectratio === _0x1ef154(0x1ab) || _0x205250['width'] === _0x205250[_0x1ef154(0x1a5)] && _0x12b410 !== _0x1d6928) { const _0x34c408 = Math[_0x1ef154(0x206)](_0x12b410 / _0x205250[_0x1ef154(0x1e5)], _0x1d6928 / _0x205250[_0x1ef154(0x1a5)]), _0x14fb5e = _0x205250['width'] * _0x34c408, _0x10e475 = _0x205250[_0x1ef154(0x1a5)] * _0x34c408, _0x2cee26 = (_0x12b410 - _0x14fb5e) / 0x2, _0x144c42 = (_0x1d6928 - _0x10e475) / 0x2; _0xc3fb01[_0x1ef154(0x14d)](_0x205250, _0x2cee26, _0x144c42, _0x14fb5e, _0x10e475); } else { if ([_0x1ef154(0x207), '9:16', _0x1ef154(0x163), _0x1ef154(0x1a9), _0x1ef154(0x203), 'ig', _0x1ef154(0x1ab)][_0x1ef154(0x186)](aspectratio)) { const _0x413682 = Math[_0x1ef154(0x206)](_0x12b410 / _0x205250['width'], _0x1d6928 / _0x205250[_0x1ef154(0x1a5)]), _0x12f0d5 = _0x205250['width'] * _0x413682, _0xa06f59 = _0x205250[_0x1ef154(0x1a5)] * _0x413682, _0x331181 = (_0x12b410 - _0x12f0d5) / 0x2, _0x5b31f2 = (_0x1d6928 - _0xa06f59) / 0x2; _0xc3fb01['drawImage'](_0x205250, _0x331181, _0x5b31f2, _0x12f0d5, _0xa06f59); } else { _0xc3fb01[_0x1ef154(0x191)] = _0x1ef154(0x1ff), _0xc3fb01[_0x1ef154(0x15e)](0x0, 0x0, _0x12b410, _0x1d6928); const _0x5e39db = Math[_0x1ef154(0x194)](_0x12b410 / _0x205250[_0x1ef154(0x1e5)], _0x1d6928 / _0x205250[_0x1ef154(0x1a5)]), _0xab5548 = _0x205250[_0x1ef154(0x1e5)] * _0x5e39db, _0x48afe3 = _0x205250[_0x1ef154(0x1a5)] * _0x5e39db, _0x1c5827 = (_0x12b410 - _0xab5548) / 0x2, _0x1e0647 = (_0x1d6928 - _0x48afe3) / 0x2; _0xc3fb01[_0x1ef154(0x14d)](_0x205250, _0x1c5827, _0x1e0647, _0xab5548, _0x48afe3); } } const _0x36f16b = _0x1abab3[_0x1ef154(0x184)]('image/png'); fs[_0x1ef154(0x1d8)](_0x19e825, _0x36f16b); const _0x575695 = await fetch(_0x334b5f), _0x1edd2 = await _0x575695['arrayBuffer'](), _0x5e722d = Buffer[_0x1ef154(0x198)](_0x1edd2); fs[_0x1ef154(0x1d8)](_0x1c2c1e, _0x5e722d); const _0xbaadbc = ['-y', _0x1ef154(0x1b7), '1', _0x1ef154(0x15d), '25', '-i', _0x19e825, '-i', _0x1c2c1e, _0x1ef154(0x1af), _0x1ef154(0x1a3), _0x1ef154(0x168), _0x1ef154(0x1ea), _0x1ef154(0x1a0), '21', '-tune', _0x1ef154(0x1c7), _0x1ef154(0x1f1), 'yuv420p', '-r', '25', _0x1ef154(0x157), _0x1ef154(0x1d4), _0x1ef154(0x1d3), _0x1ef154(0x1d5), _0x1ef154(0x15b), ..._0xe7947c ? ['-t', '' + _0xe7947c] : [], _0x1ef154(0x16e), _0x1ef154(0x192), _0x212fbf], _0x3c30ec = spawn(ffmpegPath, _0xbaadbc); _0x3c30ec[_0x1ef154(0x17f)]['on'](_0x1ef154(0x16d), _0x385d9b => { }), _0x3c30ec['on'](_0x1ef154(0x1dc), _0x2012fe => { const _0x41ccd9 = _0x1ef154; console[_0x41ccd9(0x1dc)](_0x41ccd9(0x17a), _0x2012fe), _0x19fec2(), !_0x4269ba[_0x41ccd9(0x1b1)] && _0x4269ba[_0x41ccd9(0x209)](0x1f4)[_0x41ccd9(0x176)](_0x41ccd9(0x1c1)); }), _0x3c30ec['on'](_0x1ef154(0x160), async _0x1d5a22 => { const _0x2bdbe5 = _0x1ef154; if (_0x1d5a22 !== 0x0) { _0x19fec2(); !_0x4269ba['headersSent'] && _0x4269ba[_0x2bdbe5(0x209)](0x1f4)[_0x2bdbe5(0x176)]('FFmpeg\x20process\x20failed\x20with\x20code\x20' + _0x1d5a22); return; } try { if (!fs[_0x2bdbe5(0x1c5)](_0x212fbf)) throw new Error(_0x2bdbe5(0x178)); const _0x2bdcda = fs[_0x2bdbe5(0x197)](_0x212fbf), _0x52b148 = _0x2bdcda[_0x2bdbe5(0x14f)]; let _0x1154f5 = null; if (storeVideo === _0x2bdbe5(0x1f7)) try { const _0x4cb236 = _0x2bdbe5(0x1d2), { data: _0x10f9b2, error: _0x44d9ba } = await supabase[_0x2bdbe5(0x14e)][_0x2bdbe5(0x198)](_0x2bdbe5(0x1ca))[_0x2bdbe5(0x1bc)](_0x2bdbe5(0x1d2), _0x2bdcda, { 'contentType': 'video/mp4', 'cacheControl': _0x2bdbe5(0x205), 'upsert': !![] }); if (_0x44d9ba) throw _0x44d9ba; const { data: _0x1f25ea } = supabase[_0x2bdbe5(0x14e)][_0x2bdbe5(0x198)](_0x2bdbe5(0x1ca))['getPublicUrl'](_0x4cb236); _0x1154f5 = _0x1f25ea[_0x2bdbe5(0x18b)], _0x4269ba[_0x2bdbe5(0x1f8)]({ 'success': !![], 'message': 'Video\x20generated\x20and\x20stored\x20successfully', 'url': _0x1154f5, 'size': _0x52b148 }); } catch (_0x141a89) { console[_0x2bdbe5(0x1dc)](_0x2bdbe5(0x18d), _0x141a89), !_0x4269ba[_0x2bdbe5(0x1b1)] && _0x4269ba[_0x2bdbe5(0x209)](0x1f4)['json']({ 'success': ![], 'message': 'Error\x20storing\x20video\x20in\x20Supabase', 'error': _0x141a89[_0x2bdbe5(0x1f0)] }); } else { _0x4269ba[_0x2bdbe5(0x1ac)](_0x2bdbe5(0x1be), _0x52b148), _0x4269ba['setHeader'](_0x2bdbe5(0x18c), _0x2bdbe5(0x16a)), _0x4269ba[_0x2bdbe5(0x1ac)]('Content-Disposition', 'attachment;\x20filename=\x22video-' + _0x209329 + _0x2bdbe5(0x1fc)); const _0x1fea6e = fs[_0x2bdbe5(0x1b8)](_0x212fbf); _0x1fea6e[_0x2bdbe5(0x1d9)](_0x4269ba), _0x1fea6e['on'](_0x2bdbe5(0x1a8), () => { _0x19fec2(); }), _0x1fea6e['on'](_0x2bdbe5(0x1dc), _0xeab850 => { const _0x23905c = _0x2bdbe5; console['error']('Error\x20streaming\x20file:', _0xeab850), _0x4269ba[_0x23905c(0x1a8)](), _0x19fec2(); }); } } catch (_0x3c7b2a) { console[_0x2bdbe5(0x1dc)](_0x2bdbe5(0x199), _0x3c7b2a), !_0x4269ba[_0x2bdbe5(0x1b1)] && _0x4269ba[_0x2bdbe5(0x209)](0x1f4)[_0x2bdbe5(0x176)]('Error\x20processing\x20video\x20file'), _0x19fec2(); } }), _0x125f8c['on']('close', () => { const _0x4e17f2 = _0x1ef154; _0x3c30ec && _0x3c30ec[_0x4e17f2(0x1a6)]('SIGKILL'), _0x19fec2(); }); function _0x19fec2() { const _0x1f23c8 = _0x1ef154; try { if (fs[_0x1f23c8(0x1c5)](_0x19e825)) fs['unlinkSync'](_0x19e825); if (fs[_0x1f23c8(0x1c5)](_0x1c2c1e)) fs['unlinkSync'](_0x1c2c1e); if (fs[_0x1f23c8(0x1c5)](_0x212fbf)) fs[_0x1f23c8(0x165)](_0x212fbf); } catch (_0x286661) { console['error'](_0x1f23c8(0x1e7), _0x286661); } } } catch (_0x46f553) { console[_0x1ef154(0x1dc)](_0x1ef154(0x1c6), _0x46f553), _0x4269ba[_0x1ef154(0x209)](0x1f4)[_0x1ef154(0x176)](_0x1ef154(0x1c1)); } }); async function createReel() { const _0x3a00e7 = a0_0x2f2f82; try { const _0x5592d3 = graphUrl + _0x3a00e7(0x172) + accessToken + _0x3a00e7(0x180), _0x175d0e = await axios[_0x3a00e7(0x16c)](_0x5592d3, null, { 'headers': { 'Content-Type': _0x3a00e7(0x1ef) } }); return _0x175d0e[_0x3a00e7(0x16d)]; } catch (_0x23ab24) { console['error'](_0x3a00e7(0x1ba), _0x23ab24['response']?.[_0x3a00e7(0x16d)] || _0x23ab24[_0x3a00e7(0x1f0)]); throw _0x23ab24; } } async function uploadHostedReel(_0x1524d8, _0x2127e9) { const _0x4651c9 = a0_0x2f2f82; if (!_0x2127e9) throw new Error(_0x4651c9(0x164)); try { const _0x3bb4f9 = await axios[_0x4651c9(0x16c)](_0x2127e9, null, { 'headers': { 'file_url': _0x1524d8, 'Authorization': _0x4651c9(0x19a) + accessToken, 'Content-Type': _0x4651c9(0x1ef) } }); return _0x3bb4f9[_0x4651c9(0x16d)]; } catch (_0xafdf5b) { console[_0x4651c9(0x1dc)]('Error\x20in\x20uploadHostedReel:', _0xafdf5b[_0x4651c9(0x1aa)]?.[_0x4651c9(0x16d)] || _0xafdf5b[_0x4651c9(0x1f0)]); throw _0xafdf5b; } } async function publishReel(_0x53fc1e, _0x41a37a) { const _0x580920 = a0_0x2f2f82; try { const _0x476f96 = encodeURIComponent(_0x41a37a), _0xb89b08 = graphUrl + _0x580920(0x172) + accessToken + _0x580920(0x1e8) + _0x53fc1e + _0x580920(0x1e1) + _0x476f96, _0x125363 = await axios['post'](_0xb89b08); return _0x125363[_0x580920(0x16d)]; } catch (_0x4d985d) { console[_0x580920(0x1dc)](_0x580920(0x162), _0x4d985d[_0x580920(0x1aa)]?.[_0x580920(0x16d)] || _0x4d985d[_0x580920(0x1f0)]); throw _0x4d985d; } } app[a0_0x2f2f82(0x16c)](a0_0x2f2f82(0x15f), async (_0x4b49b3, _0x508880) => { const _0x4880b1 = a0_0x2f2f82; try { const { videoUrl: _0x50b505, caption: _0x184adc } = _0x4b49b3['body'] || _0x4b49b3[_0x4880b1(0x152)]; if (!_0x50b505) return _0x508880[_0x4880b1(0x209)](0x190)[_0x4880b1(0x1f8)]({ 'success': ![], 'message': _0x4880b1(0x159) }); if (!_0x184adc) return _0x508880[_0x4880b1(0x209)](0x190)[_0x4880b1(0x1f8)]({ 'success': ![], 'message': _0x4880b1(0x1e9) }); if (!accessToken || !facebookPageId) return _0x508880[_0x4880b1(0x209)](0x1f4)['json']({ 'success': ![], 'message': _0x4880b1(0x1eb) }); const _0x162d54 = {}; try { const _0x2bf45c = await createReel(), _0x45e244 = _0x2bf45c[_0x4880b1(0x17d)]; if (!_0x45e244) throw new Error(_0x4880b1(0x1b2)); const _0x689dea = await uploadHostedReel(_0x50b505, _0x45e244); if (!_0x689dea[_0x4880b1(0x1bf)]) throw new Error(_0x4880b1(0x17b)); const _0x48af8f = await publishReel(_0x2bf45c[_0x4880b1(0x1c0)], _0x184adc); _0x162d54[_0x4880b1(0x1b5)] = { 'success': !![], 'id': _0x2bf45c['video_id'], 'type': _0x4880b1(0x1a1), 'response': _0x48af8f }; } catch (_0x1e8328) { console[_0x4880b1(0x1dc)](_0x4880b1(0x18a), _0x1e8328); } const _0x8eb8fe = _0x162d54[_0x4880b1(0x1b5)]?.[_0x4880b1(0x1bf)]; return _0x508880[_0x4880b1(0x1f8)]({ 'success': _0x8eb8fe, 'message': _0x8eb8fe ? _0x4880b1(0x1fa) + _0x162d54['facebook'][_0x4880b1(0x166)] : _0x4880b1(0x1ec), 'results': _0x162d54 }); } catch (_0x216b44) { return console['error'](_0x4880b1(0x1dd), _0x216b44), _0x508880[_0x4880b1(0x209)](0x1f4)[_0x4880b1(0x1f8)]({ 'success': ![], 'message': _0x4880b1(0x1d1), 'error': _0x216b44[_0x4880b1(0x1f0)] }); } }), app[a0_0x2f2f82(0x16c)](a0_0x2f2f82(0x1ae), async (_0xc2808, _0x3882ce) => { const _0x1df9e8 = a0_0x2f2f82, { type: type = _0x1df9e8(0x1da), text: _0x40f2bb, audio: _0x15f90b, duration: duration = 0xa, caption: _0x564842, aspectratio: aspectratio = '9:16' } = _0xc2808[_0x1df9e8(0x1fb)]; try { if (type === _0x1df9e8(0x1da)) { if (!_0x40f2bb || !_0x15f90b) return _0x3882ce[_0x1df9e8(0x209)](0x190)['json']({ 'success': ![], 'message': _0x1df9e8(0x150) }); const _0x203b89 = baseUrl + _0x1df9e8(0x153) + _0x40f2bb, _0x3a57e6 = new URLSearchParams({ 'image': _0x203b89, 'audio': _0x15f90b, 'aspectratio': aspectratio, 'duration': duration })['toString'](), _0x362f5e = await fetch(baseUrl + _0x1df9e8(0x173) + _0x3a57e6); if (!_0x362f5e['ok']) { const _0x2bf8e9 = await _0x362f5e[_0x1df9e8(0x17e)](); throw new Error(_0x1df9e8(0x179) + _0x2bf8e9); } const _0x15afde = await _0x362f5e['json'](), _0x101ce1 = _0x15afde['url']; if (!_0x101ce1) throw new Error(_0x1df9e8(0x1e3)); const _0x5e615e = await fetch(baseUrl + '/post-social', { 'method': 'POST', 'headers': { 'Content-Type': _0x1df9e8(0x1ef) }, 'body': JSON['stringify']({ 'videoUrl': _0x101ce1, 'caption': _0x564842 || '' }) }), _0x46c5f2 = await _0x5e615e['json'](); return _0x3882ce[_0x1df9e8(0x1f8)]({ 'success': !![], 'message': 'Video\x20created\x20and\x20posted\x20to\x20social\x20media', 'videoGeneration': _0x15afde, 'socialPosting': _0x46c5f2 }); } else return _0x3882ce[_0x1df9e8(0x209)](0x190)[_0x1df9e8(0x1f8)]({ 'success': ![], 'message': _0x1df9e8(0x188) }); } catch (_0x24ffbc) { return console[_0x1df9e8(0x1dc)]('Error\x20in\x20creator\x20route:', _0x24ffbc), _0x3882ce[_0x1df9e8(0x209)](0x1f4)['json']({ 'success': ![], 'message': 'Server\x20error\x20processing\x20creator\x20request', 'error': _0x24ffbc[_0x1df9e8(0x1f0)] }); } }), app['listen'](PORT, () => { });